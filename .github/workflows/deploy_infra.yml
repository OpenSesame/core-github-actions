name: Deploy to Infrastructure

on:
  workflow_call:
    inputs:
      environment:
        description: Github action environment and AWS account type
        type: string
        required: true
      commit-identifier:
        description: SHA or tag to apply, (optional) when omitted, the head of the selected branch is used
        type: string
        required: true
      release-tag:
        description: release name to apply to resources
        type: string
        required: false
        default: unnamed
      terraform-workspace: 
        description: Terraform workspace that is used
        type: string
        required: true
      terraform-root:
        description: Root directory of terraform, default to 'terraform/${ inputs.environment }'
        type: string
        required: false
    secrets:
      ORG_READ_ONLY_SSH_KEY:
        required: true
      ORG_GITHUB_PACKAGES_READ_ONLY_TOKEN:
        required: true
      CORE_ENG_DEPLOYMENTS_SLACK_WEBHOOK:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ inputs.environment }}

permissions:
  id-token: write
  contents: read

env:
  TERRAFORM_ROOT: terraform/${{ inputs.environment }}   
  TERRAFORM_WORKSPACE: ${{ inputs.terraform-workspace }}
  TF_INPUT: false
  TF_IN_AUTOMATION: true

jobs:
  Setup:
    runs-on: ubuntu-latest
    outputs:
      commit-tag: ${{ steps.get-commit-tag.outputs.commit-tag }}
      TERRAFORM_ROOT: ${{ steps.set-env.outputs.TERRAFORM_ROOT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.6
        with:
          ref: ${{ inputs.commit-identifier }}

      - name: Get Build Commit Tag
        id: get-commit-tag
        run: |
          echo "commit-tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Determine Terraform Root
        id: set-env
        run: |
          if [ -n "${{ inputs.terraform-root }}" ]; then
            echo "TERRAFORM_ROOT=${{ inputs.terraform-root }}" >> $GITHUB_ENV
            echo "::set-output name=TERRAFORM_ROOT::${{ inputs.terraform-root }}"
          else
            echo "TERRAFORM_ROOT=terraform/${{ inputs.environment }}" >> $GITHUB_ENV
            echo "::set-output name=TERRAFORM_ROOT::terraform/${{ inputs.environment }}"
          fi

      - name: Markdown Summary
        run: |
          echo "### Deploy Infrastructure Context"  >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event_name }} ${{ github.event.action }}" >> $GITHUB_STEP_SUMMARY
          echo "**Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow Ref (branch)**: ${{ github.workflow_ref }}" >> $GITHUB_STEP_SUMMARY
          echo -e "**Workflow Sha (commit)**: ${{ github.workflow_sha }}\n" >> $GITHUB_STEP_SUMMARY
          echo "**Inputs**" >> $GITHUB_STEP_SUMMARY
          echo -e "${{ toJson(inputs) }}\n" >> $GITHUB_STEP_SUMMARY
          echo "**Release Tag**: ${{ inputs.release-tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit Tag**: ${{ steps.get-commit-tag.outputs.commit-tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Terraform Root**: ${{ env.TERRAFORM_ROOT }} " >> $GITHUB_STEP_SUMMARY
          echo "*Note: Workflow Ref & Sha represent the branch and commit of the workflow defintion. This may not be the same as the branch/commit checked out supplying the code. The 'SHA or tag of tests to run' aka commit-identifier, is what specifies the test defintions. If a commit-identifier is not supplied, the head of the selected branch is used.*" >> $GITHUB_STEP_SUMMARY

      - name: Validate Environment
        run: |
          if [[ ! "${{ inputs.environment }}" =~ ^(dev|stage|prod)$ ]]; then
            echo "Invalid environment: ${{ inputs.environment }}"
            exit 1
          fi

  Deploy-Terraform:
    name: Deploy Terraform
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment}}
    needs: Setup
    defaults:
      run:
        working-directory: ${{ needs.Setup.outputs.TERRAFORM_ROOT }}

    steps:
      - id: get-role-arn
        uses: OpenSesame/gha-oidc-access/get-role-arn@v2
        with:
          domain: core
          env: ${{ inputs.environment }}
          ORG_READ_ONLY_SSH_KEY: ${{ secrets.ORG_READ_ONLY_SSH_KEY }}
      
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ steps.get-role-arn.outputs.role-arn }}
          role-session-name: ${{ inputs.terraform-workspace }}-${{ inputs.environment }}-Run${{ github.run_id }}
          aws-region: ${{ steps.get-role-arn.outputs.region }}

      - name: Checkout Actions
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-identifier }}

      - name: Configure Github Credentials
        id: configure-credentials
        shell: bash
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo '${{ secrets.ORG_READ_ONLY_SSH_KEY }}' > ~/.ssh/id_rsa
          ssh-keyscan github.com > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/id_rsa ~/.ssh/known_hosts

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.4
          terraform_wrapper: false # required to access terraform outputs after apply

      - name: Init Terraform
        run: terraform init -upgrade

      - name: Select Workspace
        run: terraform workspace select -or-create ${{ env.TERRAFORM_WORKSPACE }}

      - name: Apply Terraform
        run: terraform apply -auto-approve -input=false

  Notify-Slack:
    name:
    runs-on: ubuntu-latest
    needs: [Deploy-Terraform]
    steps:
      - uses: ravsamhq/notify-slack-action@v2
        if: always()
        with:
          status: ${{ job.status }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notification_title: "<{repo_url}|{repo}> {workflow}"
          message_format: "Release ${{ inputs.release-tag }}\ndeployed commit ${{ inputs.commit-identifier }}\n{emoji} ${{ inputs.environment }} {status_message}"
          footer: "Workflow: {run_url}|View"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.CORE_ENG_DEPLOYMENTS_SLACK_WEBHOOK }}