on:
  pull_request:
    branches: [main]
    types: [closed]

jobs:
  ReadPackageVersion:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v1

      - name: Read current package version
        id: version
        shell: bash
        run: |
          version=v$(grep version package.json | awk -F \" '{print $4}')
          echo version: $version
          echo "{name}={version}" >> $version
    outputs:
      version: ${{ steps.version.outputs.version }}

  DeleteTagAndRelease:
    runs-on: ubuntu-latest
    needs: ReadPackageVersion
    steps:
      - name: Delete current tag and release matching the version
        uses: dev-drprasad/delete-tag-and-release@v0.1.3
        with:
          delete_release: true
          tag_name: ${{ needs.ReadPackageVersion.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ needs.ReadPackageVersion.outputs.version }}

  CreateTag:
    runs-on: ubuntu-latest
    needs: [ReadPackageVersion, DeleteTagAndRelease]
    steps:
      - name: Create new git tag from version
        id: tag_release
        uses: tvdias/github-tagger@v0.0.1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.ReadPackageVersion.outputs.version }}

  CreateRelease:
    runs-on: ubuntu-latest
    needs: [ReadPackageVersion, DeleteTagAndRelease, CreateTag]
    steps:
      - name: Create new git release from version
        if: needs.ReadPackageVersion.outputs.version
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.ReadPackageVersion.outputs.version }}
          release_name: Release ${{ needs.ReadPackageVersion.outputs.version }}
