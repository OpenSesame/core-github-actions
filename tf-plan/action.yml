name: Terraform Plan
description: Execute Terraform Plan
inputs:
  github_ssh_key:
    description: Github SSH Key to read shared terraform modules
    required: true
  terraform_root:
    description: Terraform root configuration name
    required: true
  terraform_workspace:
    description: Terraform workspace to select
    required: true
  node_auth_token:
    description: Node auth token environment variable
    required: false

outputs:
  terraform_validate_log:
    description: The output of terraform validate
    value: ${{ steps.tf-validate.outputs.stdout }}
  terraform_validate_status:
    description: The status of terraform validate step
    value: ${{ steps.tf-validate.outcome }}
  terraform_plan_log:
    description: The output of terraform plan
    value: ${{ steps.tf-plan.outputs.stdout }}
  terraform_plan_status:
    description: The status of terraform plan step
    value: ${{ steps.tf-plan.outcome }}

runs:
  using: composite
  steps:
    - name: Configure Github Credentials
      id: configure-credentials
      shell: bash
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo '${{ inputs.github_ssh_key }}' > ~/.ssh/id_rsa
        ssh-keyscan github.com > ~/.ssh/known_hosts
        chmod 600 ~/.ssh/id_rsa ~/.ssh/known_hosts

    - name: Npm CI
      id: npm-ci
      shell: bash
      run: |
        echo "[>>>] npm ci"
        npm ci
      env:
        NODE_AUTH_TOKEN: ${{ inputs.node_auth_token }}

    - name: Read Secrets Into Env
      id: build-secrets
      shell: bash
      run: |
        echo "[>>>] read secrets into ./terraform/.env"
        ./node_modules/.bin/core-build build-secrets > ./terraform/.env

    - name: Terraform Init ‚ú®
      id: tf-init
      shell: bash
      working-directory: terraform/${{ inputs.terraform_root }}
      run: |
        echo "[>>>] terraform init ‚ú®"
        terraform init

    - name: Terraform Select Workspace üîç
      id: tf-select
      shell: bash
      working-directory: terraform/${{ inputs.terraform_root }}
      run: |
        echo "[>>>] select terraform workspace ${{ inputs.terraform_workspace }} üîç"
        node ../../node_modules/.bin/core-build select-workspace -w ${{ inputs.terraform_workspace }}

    - name: Terraform Validate üïµÔ∏è
      id: tf-validate
      shell: bash
      working-directory: terraform/${{ inputs.terraform_root }}
      run: |
        echo "[>>>] terraform validate üïµÔ∏è"
        ../../node_modules/.bin/env-cmd -f ../.env terraform validate -no-color

    - name: Terraform Plan üîÆ
      id: tf-plan
      shell: bash
      working-directory: terraform/${{ inputs.terraform_root }}
      run: |
        echo "[>>>] terraform plan üîÆ"
        ../../node_modules/.bin/env-cmd -f ../.env terraform plan -no-color

    - name: Comment on PR
      uses: actions/github-script@v5
      with:
        script: |
          const CODE_BLOCK = '```';

          const output = `
          ### Terraform Plan Prod üîç
          <details>
          <summary>Logs</summary>

          ${ CODE_BLOCK }
          ${{ steps.tf-plan.outputs.stdout }}
          ${ CODE_BLOCK }
          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*
          `;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '${{ steps.tf-plan.outputs.stdout }}'
          });
